[tool.poetry]
name = "naskpy"
version = "0.1.1"
description = "Tools, modules and functions that I use regularly while coding in Python"
authors = ["Mehdi Nassim KHODJA <18899702+naskio@users.noreply.github.com>"]
maintainers = ["Mehdi Nassim KHODJA <18899702+naskio@users.noreply.github.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/naskio/naskpy"
repository = "https://github.com/naskio/naskpy"
documentation = "https://naskpy.readthedocs.io"
keywords = ["Python", "Python3", "library", "utilities"]
classifiers = [
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
include = [
    "LICENSE",
]
[tool.poetry.urls]
issues = "https://github.com/naskio/naskpy/issues"


[tool.poetry.dependencies]
python = "^3.7"
pendulum = "^2.1.2"
requests = "^2.26.0"
Pillow = "^9.0.1"
fire = "^0.4.0"
grequests = "^0.6.0"
aiohttp = "^3.8.1"

[tool.poetry.dev-dependencies]
pytest = "^6.2.2"
pytest-asyncio = "^0.14.0"
pytest-cov = "^2.12.1"
pytest-mock = "^3.6.1"
pytest-randomly = "^3.10.1"
Sphinx = "4.4.0"
sphinx-rtd-theme = "1.0.0"
myst-parser = "0.17.0"
# coverage = "^5.5"
# tox = "^3.23.0"
# pep8 = "^1.7.1"
# pylint = "^2.12.2"
prospector = { extras = ["with_bandit"], version = "^1.6.0" } # or poetry add prospector[with_everything] --dev
poethepoet = "^0.12.3"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.poe.tasks] # poe <cmd_name>
hello-world = { shell = "TEXT=hello-world; echo $TEXT" }                            # poe hello-world
static_analyser = { shell = "prospector -o text -B" }                               # poe static_analyser
watch-md = { shell = "npx remark . --quiet --frail --watch" }                       # poe watch-md
check-md = { shell = "npx remark . --quiet --frail" }                               # poe check-md
format-md = { shell = "npx remark . --quiet --frail --output" }                     # poe format-md
test = "pytest"                                                                     # poe test
py_script_example = { script = "my_app.service:run(debug=True)" }                   # example: python script based task
shell_script_example = { shell = "ssh -N -L 0.0.0.0:8080:$PROD:8080 $PROD &" }      # (posix) shell based task